package controller;

import core.IComplex;

public interface IController<T extends IComplex> {
    /**
     * Метод считывает с консоли значение первого операнда вычисляемого на калькуляторе числового выражения
     * @return
     */
    boolean inputOperandA();

    /**
     * Метод считывает с консоли значение второго операнда вычисляемого на калькуляторе числового выражения
     * @return
     */
    boolean inputOperandB();

    /**
     * Метод считывает с консоли тип текущей операции. Возможные значения: +, -, /, *.
     * @return
     */
    boolean inputOperator();

    /**
     * Метод инициирует выполнение текущей операции на калькуляторе
     */
    void calculate();

    /**
     * Метод считывает с консоли ответ на вопрос о продолжении вычислений с использованием результата,
     * полученного в прошлом примере.
     * В случае положительного ответа метод инициализирует первый операнд нового примера
     * предыдущим результатом вычислений.
     * @return
     */
    boolean inputNext();

    /**
     * Метод считывает с консоли ответ на вопрос об использовании калькулятора для вычисления нового выражения
     * @return
     */
    boolean inputNew();
}
